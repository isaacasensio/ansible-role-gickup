---
- name: Create gickup user
  ansible.builtin.user:
    name: "{{ gickup_container_user }}"
    shell: /sbin/nologin
    create_home: true
    state: present
  become: true

- name: Get created user metadata
  ansible.builtin.getent:
    database: passwd
    key: "{{ gickup_container_user }}"

- name: Setting user id and group id facts
  ansible.builtin.set_fact:
    created_uid: "{{ ansible_facts.getent_passwd[gickup_container_user].1 }}"
    created_gid: "{{ ansible_facts.getent_passwd[gickup_container_user].2 }}"

- name: Ensure gickup required folders exist
  become: true
  ansible.builtin.file:
    dest: "{{ item }}"
    state: directory
    owner: "{{ gickup_container_user }}"
    group: "{{ gickup_container_user }}"
    mode: 0755
  loop:
    - "{{ gickup_host_path }}"
    - "{{ gickup_host_log_path }}"
    - "{{ gickup_host_backup_path }}"

- name: Create gickup files.
  ansible.builtin.template:
    src: "{{ item }}.j2"
    dest: "{{ gickup_host_path }}/{{ item }}"
    owner: "{{ gickup_container_user }}"
    group: "{{ gickup_container_user }}"
    mode: 0640
  become: true
  loop:
    - "docker-compose.yml"
    - "config.yml"

- name: Create systemd gickup service.
  ansible.builtin.template:
    src: templates/gickup.service.j2
    dest: "/etc/systemd/system/gickup.service"
    mode: 0644
  become: true

- name: Ensure gickup.service is started
  ansible.builtin.systemd:
    state: started
    enabled: true
    name: gickup
  become: true

- name: Remove old image versions
  become: true
  community.docker.docker_prune:
    images: true
    images_filters:
      dangling: false
  notify: Restart Docker service
